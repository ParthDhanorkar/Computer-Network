import java.io.IOException;
import java.net.*;

public class UDPFactorialClient {
    public static void main(String[] args) throws IOException {
        DatagramSocket socket = null;

        // Create a datagram socket
        socket = new DatagramSocket();
        InetAddress serverAddress = InetAddress.getByName("localhost");
        int serverPort = 8888;

        // Number to calculate factorial
        int number = 5;

        // Convert the number to bytes
        byte[] sendData = String.valueOf(number).getBytes();

        // Create a datagram packet to send to the server
        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, serverAddress, serverPort);

        // Send the packet to the server
        socket.send(sendPacket);

        // Receive the response from the server
        byte[] receiveData = new byte[1024];
        DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
        socket.receive(receivePacket);

        // Convert the response to a string and display it
        String response = new String(receivePacket.getData(), 0, receivePacket.getLength());
        System.out.println("Factorial of " + number + " is: " + response);

        // Close the socket
        if (socket != null && !socket.isClosed()) {
            socket.close();
        }
    }
}







import java.io.*;
import java.net.*;

public class UDPFactorialServer {
    public static void main(String[] args) throws IOException {
        
        // Create a datagram socket bound to port 8888
        DatagramSocket socket = new DatagramSocket(8888);
        System.out.println("Server started. Listening on port 8888...");

        while (true) {
            byte[] receiveData = new byte[1024];
            DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);

            // Receive packet from client
            socket.receive(receivePacket);

            // Extract data from packet
            String numStr = new String(receivePacket.getData(), 0, receivePacket.getLength());

            // Convert string to integer for factorial calculation
            int num = Integer.parseInt(numStr);
            
            // Compute the factorial
            long factorial = calculateFactorial(num);

            // Prepare response
            String response = String.valueOf(factorial);
            byte[] sendData = response.getBytes();

            // Get client address and port from the received packet
            InetAddress clientAddress = receivePacket.getAddress();
            int clientPort = receivePacket.getPort();

            // Create a datagram packet for the response
            DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, clientAddress, clientPort);

            // Send the response packet back to the client
            socket.send(sendPacket);

            // Socket close
            socket.close();
        }
        
    }

    // Method to calculate factorial
    private static long calculateFactorial(int n) {
        if (n == 0 || n == 1) {
            return 1;
        }
        long result = 1;
        for (int i = 2; i <= n; i++) {
            result *= i;
        }
        return result;
    }
}
